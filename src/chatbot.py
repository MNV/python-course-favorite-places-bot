"""
–§—É–Ω–∫—Ü–∏–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å API Telegram.
"""
import logging

from telegram import (
    Bot,
    Chat,
    ParseMode,
    ReplyKeyboardMarkup,
    ReplyKeyboardRemove,
    Update,
)
from telegram.ext import (
    CallbackContext,
    CallbackQueryHandler,
    CommandHandler,
    ConversationHandler,
    Filters,
    Handler,
    MessageHandler,
    Updater,
)
from telegram.ext.utils.types import CCT

from handlers.callback.places import PlaceCallbackHandler, PlaceDeleteCallbackHandler
from handlers.command.places import PlacesCommandHandler
from handlers.message.places import PlaceAddMessageHandler
from settings import settings

logging.basicConfig(
    level=logging.DEBUG, format="%(asctime)s - %(name)s - %(levelname)s - %(message)s"
)


class ChatBotTelegram:
    """
    –ß–∞—Ç-–±–æ—Ç –¥–ª—è Telegram.
    """

    # –∫–æ–º–∞–Ω–¥—ã —á–∞—Ç-–±–æ—Ç–∞
    KEYBOARD_COMMANDS = {
        "places": "üß≠ –°–ø–∏—Å–æ–∫ –º–µ—Å—Ç",
        "add": "üìå –î–æ–±–∞–≤–∏—Ç—å –º–µ—Å—Ç–æ",
        "help": "‚Ñπ –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞",
    }

    # –∑–Ω–∞—á–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
    STATE_LOCATION = 1
    # –∑–Ω–∞—á–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –æ–ø–∏—Å–∞–Ω–∏—è
    STATE_DESCRIPTION = 2

    def __init__(self, updater_object: Updater):
        """
        –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä.

        :param updater_object: –û–±—ä–µ–∫—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π (—Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è) –æ—Ç —á–∞—Ç-–±–æ—Ç–∞.
        """

        self.updater = updater_object

    def add_handler(self, handler: Handler[Update, CCT]) -> None:
        """
        –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–∞—Ç-–±–æ—Ç–∞.

        :param handler: –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥.
        :return:
        """

        self.updater.dispatcher.add_handler(handler)  # type: ignore

    def start(self) -> None:
        """
        –ó–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–π –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å Telegram
        –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π (—Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è) –∏ –∏—Ö –æ–±—Ä–∞–±–æ—Ç–∫–∏.

        :return:
        """

        self.updater.start_polling()
        self.updater.idle()

    def command_start(
        self,
        update: Update,
        context: CallbackContext,  # pylint: disable=unused-argument
    ) -> None:
        """
        –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã `/start`.

        :param update: –û–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏, –ø–æ—Å—Ç—É–ø–∏–≤—à–∏–º–∏ –æ—Ç —á–∞—Ç-–±–æ—Ç–∞.
        :param context: –û–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∑–∞–ø—Ä–æ—Å–∞.
        :return:
        """

        if isinstance(update.effective_chat, Chat):
            keyboard_buttons = [
                [
                    self.KEYBOARD_COMMANDS["places"],
                    self.KEYBOARD_COMMANDS["add"],
                ],
                [self.KEYBOARD_COMMANDS["help"]],
            ]
            keyboard = ReplyKeyboardMarkup(
                keyboard=keyboard_buttons, resize_keyboard=True
            )

            update.effective_chat.send_message(
                text=f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {update.message.chat.first_name}!" + "\n\n"
                "–ñ–µ–ª–∞–µ–º –ø—Ä–∏—è—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–µ—Ä–≤–∏—Å–æ–º.\n\n"
                '–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞ —Ä–∞—Å–∫—Ä—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –≤–≤–æ–¥–µ —Å–∏–º–≤–æ–ª–∞ "/".\n'
                "–¢–∞–∫–∂–µ –∫–æ–º–∞–Ω–¥—ã –¥–æ—Å—Ç—É–ø–Ω—ã –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –∫–Ω–æ–ø–æ—á–Ω–æ–º –º–µ–Ω—é –±–æ—Ç–∞.\n\n"
                "/help - —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n",
                reply_markup=keyboard,
            )

    def command_places(
        self,
        update: Update,
        context: CallbackContext,  # pylint: disable=unused-argument
    ) -> None:
        """
        –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã `/places`.

        :param update: –û–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏, –ø–æ—Å—Ç—É–ø–∏–≤—à–∏–º–∏ –æ—Ç —á–∞—Ç-–±–æ—Ç–∞.
        :param context: –û–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∑–∞–ø—Ä–æ—Å–∞.
        :return:
        """

        PlacesCommandHandler().handle(update)

    def command_add(
        self,
        update: Update,
        context: CallbackContext,  # pylint: disable=unused-argument
    ) -> int:
        """
        –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã `/add`.

        :param update: –û–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏, –ø–æ—Å—Ç—É–ø–∏–≤—à–∏–º–∏ –æ—Ç —á–∞—Ç-–±–æ—Ç–∞.
        :param context: –û–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∑–∞–ø—Ä–æ—Å–∞.
        :return:
        """

        update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ:")

        return self.STATE_LOCATION

    def command_help(
        self,
        update: Update,
        context: CallbackContext,  # pylint: disable=unused-argument
    ) -> None:
        """
        –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã `/help`.

        :param update: –û–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏, –ø–æ—Å—Ç—É–ø–∏–≤—à–∏–º–∏ –æ—Ç —á–∞—Ç-–±–æ—Ç–∞.
        :param context: –û–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∑–∞–ø—Ä–æ—Å–∞.
        :return:
        """

        update.effective_chat.send_message(  # type: ignore
            text="–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–∏—Å–∞ –∏ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∏ –Ω–∞–ø—Ä–∞–≤–ª—è–π—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, "
            "—Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é @MichaelNV.\n\n"
            "–ë—É–¥–µ–º —Ä–∞–¥—ã –≤–∞—à–∏–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º –∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è–º!\n\n",
            parse_mode=ParseMode.HTML,
        )

    def cancel(
        self,
        update: Update,
        context: CallbackContext,  # pylint: disable=unused-argument
    ) -> int:
        """
        –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å —á–∞—Ç-–±–æ—Ç–æ–º.

        :param update: –û–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏, –ø–æ—Å—Ç—É–ø–∏–≤—à–∏–º–∏ –æ—Ç —á–∞—Ç-–±–æ—Ç–∞.
        :param context: –û–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∑–∞–ø—Ä–æ—Å–∞.
        :return:
        """

        update.message.reply_text(
            "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –æ–±—Ä–∞—Ç–∏–ª–∏—Å—å –∫ –Ω–∞—à–µ–º—É —Å–µ—Ä–≤–∏—Å—É.",
            reply_markup=ReplyKeyboardRemove(),
        )

        return ConversationHandler.END

    @staticmethod
    def message_unknown(
        update: Update, context: CallbackContext  # pylint: disable=unused-argument
    ) -> None:
        """
        –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ —á–∞—Ç-–±–æ—Ç—É —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.

        :param update: –û–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏, –ø–æ—Å—Ç—É–ø–∏–≤—à–∏–º–∏ –æ—Ç —á–∞—Ç-–±–æ—Ç–∞.
        :param context: –û–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∑–∞–ø—Ä–æ—Å–∞.
        :return:
        """

        update.effective_chat.send_message(  # type: ignore
            text="–ü–æ–∫–∞ –Ω–µ –æ—á–µ–Ω—å –ø–æ–Ω–∏–º–∞—é —á—Ç–æ –∏–º–µ–ª–æ—Å—å –≤ –≤–∏–¥—É.\n\n"
            '–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ —Ä–∞—Å–∫—Ä—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –≤–≤–æ–¥–µ —Å–∏–º–≤–æ–ª–∞ "/".\n'
            "–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞ ‚Äì /help.\n",
        )

    def callback_place(
        self,
        update: Update,
        context: CallbackContext,  # pylint: disable=unused-argument
    ) -> None:
        """
        –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä –æ–±—ä–µ–∫—Ç–∞ –ª—é–±–∏–º–æ–≥–æ –º–µ—Å—Ç–∞.

        :param update: –û–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏, –ø–æ—Å—Ç—É–ø–∏–≤—à–∏–º–∏ –æ—Ç —á–∞—Ç-–±–æ—Ç–∞.
        :param context: –û–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∑–∞–ø—Ä–æ—Å–∞.
        :return:
        """

        PlaceCallbackHandler().handle(update.callback_query)

    def callback_place_delete(
        self,
        update: Update,
        context: CallbackContext,  # pylint: disable=unused-argument
    ) -> None:
        """
        –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –ª—é–±–∏–º–æ–≥–æ –º–µ—Å—Ç–∞.

        :param update: –û–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏, –ø–æ—Å—Ç—É–ø–∏–≤—à–∏–º–∏ –æ—Ç —á–∞—Ç-–±–æ—Ç–∞.
        :param context: –û–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∑–∞–ø—Ä–æ—Å–∞.
        :return:
        """

        PlaceDeleteCallbackHandler().handle(update.callback_query)

    def text_message_handler(self, update: Update, context: CallbackContext) -> None:
        """
        –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

        :param update: –û–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏, –ø–æ—Å—Ç—É–ø–∏–≤—à–∏–º–∏ –æ—Ç —á–∞—Ç-–±–æ—Ç–∞.
        :param context: –û–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∑–∞–ø—Ä–æ—Å–∞.
        :return:
        """

        keyboard_commands = {
            value: key for key, value in self.KEYBOARD_COMMANDS.items()
        }
        # –ø–æ–∏—Å–∫ –∫–æ–º–∞–Ω–¥—ã –∏ –µ—ë –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
        if command_name := keyboard_commands.get(update.message.text):
            if method := getattr(self, "command_" + command_name):
                return method(update, context)

            return None

        # –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã
        return self.message_unknown(update, context)

    def message_location(self, update: Update, context: CallbackContext) -> int:
        """
        –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

        :param update: –û–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏, –ø–æ—Å—Ç—É–ø–∏–≤—à–∏–º–∏ –æ—Ç —á–∞—Ç-–±–æ—Ç–∞.
        :param context: –û–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∑–∞–ø—Ä–æ—Å–∞.
        :return:
        """

        if isinstance(context.user_data, dict):
            context.user_data["location"] = update.message.location

        update.message.reply_text("–î–æ–±–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –º–µ—Å—Ç–∞: ")

        return self.STATE_DESCRIPTION

    def message_description(self, update: Update, context: CallbackContext) -> int:
        """
        –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

        :param update: –û–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏, –ø–æ—Å—Ç—É–ø–∏–≤—à–∏–º–∏ –æ—Ç —á–∞—Ç-–±–æ—Ç–∞.
        :param context: –û–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∑–∞–ø—Ä–æ—Å–∞.
        :return:
        """

        if context.user_data and "location" in context.user_data:
            PlaceAddMessageHandler().handle(
                update,
                location=context.user_data["location"],
                description=update.message.text,
            )
        # todo: –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω—É—é —Å–∏—Ç—É–∞—Ü–∏—é

        return ConversationHandler.END


try:
    updater = Updater(
        bot=Bot(settings.chatbot_telegram.api_token),
    )
    bot = ChatBotTelegram(updater)

    # –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
    bot.add_handler(CommandHandler("start", bot.command_start))
    bot.add_handler(CommandHandler("places", bot.command_places))
    bot.add_handler(CommandHandler("help", bot.command_help))

    # –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –ª—é–±–∏–º–æ–≥–æ –º–µ—Å—Ç–∞
    bot.add_handler(
        ConversationHandler(
            # –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ—É–Ω–∫—Ü–∏–π –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞
            # self.KEYBOARD_COMMANDS
            entry_points=[
                CommandHandler("add", bot.command_add),
                MessageHandler(
                    Filters.regex(f'^{bot.KEYBOARD_COMMANDS.get("add")}$'),
                    bot.command_add,
                ),
            ],
            states={
                bot.STATE_LOCATION: [
                    # –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è, —Å–æ–¥–µ—Ä–∂–∞—â–µ–≥–æ —Å–≤–µ–¥–µ–Ω–∏—è –æ –ª–æ–∫–∞—Ü–∏–∏
                    MessageHandler(Filters.location, bot.message_location),
                ],
                bot.STATE_DESCRIPTION: [
                    # –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è, —Å–æ–¥–µ—Ä–∂–∞—â–µ–≥–æ –æ–ø–∏—Å–∞–Ω–∏–µ –º–µ—Å—Ç–∞
                    MessageHandler(Filters.text, bot.message_description),
                ],
            },
            fallbacks=[CommandHandler("cancel", bot.cancel)],
        )
    )

    # –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ—É–Ω–∫—Ü–∏–π –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞
    # –ø—Ä–æ—Å–º–æ—Ç—Ä –æ–±—ä–µ–∫—Ç–∞
    bot.add_handler(CallbackQueryHandler(bot.callback_place, pattern=r"place:\d{1,20}"))
    # —É–¥–∞–ª–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞
    bot.add_handler(
        CallbackQueryHandler(
            bot.callback_place_delete, pattern=r"place.delete:\d{1,20}"
        )
    )

    # –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–∫–Ω–æ–ø–æ—á–Ω–æ–≥–æ –º–µ–Ω—é –∏–ª–∏ –ª—é–±–æ–≥–æ —Ç–µ–∫—Å—Ç–∞)
    bot.add_handler(MessageHandler(Filters.text, bot.text_message_handler))

    # –∑–∞–ø—É—Å–∫ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å —á–∞—Ç-–±–æ—Ç–æ–º
    bot.start()

except Exception as exception:
    # todo: —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –∏—Å–∫–ª—é—á–µ–Ω–∏–π
    raise exception
